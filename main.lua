--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Runs after everything in main.lua have been completed.

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
function love.load()
  Gamestate.registerEvents()
  Gamestate.switch(Debug_screen.menu)
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Load Utilites - Heart of the Patchwork Library, a framework that extends LOVE with more features.

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities = require("library.Quilt.Utilities")
Utilities.setup("library.Quilt.Utilities", {
  -- load_only = {},
  -- remove = {},
  color = {},
  content_loader = {},
  debug_tools = {},
  global_defaults = {},
  love_patch = {},
  number = {},
  mouse = {},
})

Pixelscreen = require("library.Quilt.Kit.Pixelscreen")
Pixelscreen.setup()

Camera = require("library.Quilt.Kit.Camera")
Camera.setup()

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Assets

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Fonts - Load all fonts used in this project.
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Font = {
  golden_apple = love.graphics.newFont(
    "asset/font/golden_apple/golden_apple.fnt",
    "asset/font/golden_apple/golden_apple.png"
  ),
  earth_illusion = love.graphics.newFont(
    "asset/font/earth_illusion/earth_illusion.fnt",
    "asset/font/earth_illusion/earth_illusion.png"
  ),
  ack_recall = love.graphics.newFont("asset/font/ack_recall/AckRecall.ttf", 16, "mono"),
}

Font.default = Font.golden_apple
love.graphics.setFont(Font.default)
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Art - Patchwork assumes a smaller game and pre-loads all art. 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities.content_loader.texture("Texture", "asset/texture")
Utilities.content_loader.flat_shader("Shader", "asset/shader")

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Libraries

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * hump - Helper Utilities for Massive Progression - Matthias Richter - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Gamestate = require("library.hump.gamestate")
Timer = require("library.hump.timer")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * bump-niji - a Lua collision-detection library for axis-aligned rectangles - Enrique García Cota/ patch: shru - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Bump = require("library.bump.bump-niji")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * DEEP-slog - a tiny library for queuing and executing actions in sequence. - Nikoloz Otiashvili/ patch: SysL - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Render = require("library.deep")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Anim8 - Animation library for LÖVE - Enrique García Cota - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Animation = require("library.anim8")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Quilt - Game focused libraries - SysL (C. Hall)  - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Love Callbacks

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Draw - 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--`
function love.draw()
  love.graphics.rectangle("fill", 0, 0, love.graphics.getWidth(), love.graphics.getHeight())
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Update - 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
function love.update(dt)
  if dt > 1/30 then return end
  Pixelscreen.update(dt)
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Debug

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities.content_loader.flat_lua("Debug_screen", "asset/screen-debug")
Utilities.content_loader.flat_lua("screen", "asset/screen")
Utilities.debug_tools.print_globals()

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * PATCHWORK ENGINE - Version 0.1 - January 28, 2022

--------------------------------------------------------------------------------------------------------------------------------------------------]]--

local seen={}

local function dump(t,i)
    seen[t]=true
    local s={}
    local n=0
    for k in pairs(t) do
        n=n+1 s[n]=k
    end
    table.sort(s)
    for k,v in ipairs(s) do
      if type(t[v]) == "function" then
          print(i,v)
      end
        v=t[v]
        if type(v)=="table" and not seen[v] then
            dump(v,i.."\t")
        end
    end
end

--dump(Pixelscreen,"")