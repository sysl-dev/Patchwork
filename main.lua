--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Runs after everything in main.lua have been completed.

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
function love.load()
  Gamestate.registerEvents()
  Gamestate.switch(Debug_screen.test_pixel_scale)
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Load Utilites - Heart of the Patchwork Library, a framework that extends LOVE with more features.

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities = require("library.Quilt.Utilities")
Utilities.setup("library.Quilt.Utilities", {
  pixel_scale = { 
    no_global_changes = false,
    width = BASE_WIDTH or 256,
    height = BASE_HEIGHT or 144,
    --scale = 4,
  }
})

Font = {
  golden_apple = love.graphics.newFont(
    "asset/font/golden_apple/golden_apple.fnt",
    "asset/font/golden_apple/golden_apple.png"
  ),
}
Font.default = Font.golden_apple
love.graphics.setFont(Font.default)

--/DEL
--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Assets

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Art - Patchwork assumes a smaller game and pre-loads all art. 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities.content_loader.textures("Texture", "asset/texture")

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Libraries

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * hump - Helper Utilities for Massive Progression - Matthias Richter - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Gamestate = require("library.hump.gamestate")
Timer = require("library.hump.timer")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * bump-niji - a Lua collision-detection library for axis-aligned rectangles - Enrique García Cota/ patch: shru - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Bump = require("library.bump.bump-niji")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * DEEP-slog - a tiny library for queuing and executing actions in sequence. - Nikoloz Otiashvili/ patch: SysL - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Render = require("library.deep")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Anim8 - Animation library for LÖVE - Enrique García Cota - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Animation = require("library.anim8")
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Quilt - Game focused libraries - SysL (C. Hall)  - License MIT
--------------------------------------------------------------------------------------------------------------------------------------------------]]--

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Love Callbacks

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Draw - 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--`
function love.draw()
  love.graphics.rectangle("fill", 0, 0, love.graphics.getWidth(), love.graphics.getHeight())
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------
  * Update - 
--------------------------------------------------------------------------------------------------------------------------------------------------]]--
function love.update(dt)
  if dt > 1/30 then return end
  Utilities.pixel_scale.update(dt)
end

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * Debug

--------------------------------------------------------------------------------------------------------------------------------------------------]]--
Utilities.content_loader.flat_lua_loader("Debug_screen", "asset/screen-debug")
Utilities.debug_tools.print_globals()

--[[--------------------------------------------------------------------------------------------------------------------------------------------------

  * PATCHWORK ENGINE - Version 0.1 - January 28, 2022

--------------------------------------------------------------------------------------------------------------------------------------------------]]--